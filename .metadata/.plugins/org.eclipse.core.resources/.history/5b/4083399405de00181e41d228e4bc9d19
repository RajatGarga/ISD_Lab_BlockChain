package tests;

import java.security.KeyPair;
import java.sql.Time;

import org.apache.commons.lang3.StringUtils;

import BlockChain.Block;
import BlockChain.Constants;
import BlockChain.Transaction;
import utils.Crypto;

public class blockHashTest {
	public static void main(String[] args) {
		long starttime = System.currentTimeMillis();
		KeyPair keys = Crypto.generateKeys();
		Transaction trans = new Transaction("Owner", "Receiver", 10, "id");
		trans.sign(Crypto.getPrivateKeyasString(keys));
		Block block = new Block("timestamp", "previousHash");
		block.addTransaction(trans.toJSON());
		while(!block.isvalid()) {
			block.incNonce();
		}
		long endtime = System.currentTimeMillis();
		double time = (endtime-starttime)/1000.0;
		System.out.println("Time taken = "+time);
	}
	
	public static boolean test(String hash, int nonce) {
		String matchString = StringUtils.repeat("0", Constants.DIFFICULTY);
		String subs = hash.substring(0, Constants.DIFFICULTY);
		//System.out.println(nonce +" " + subs);
		if(subs.matches(matchString)) {
			return true;
		}else {
			return false;
		}
	}
}
