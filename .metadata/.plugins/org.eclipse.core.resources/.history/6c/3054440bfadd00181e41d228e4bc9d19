package BlockChain;

import org.json.simple.JSONObject;
import org.json.simple.parser.*;

public class Transaction {
	//public key of owner
	String owner;
	//public key of receiver
	String receiver;
	int coins;
	String id;
	String signature;
	
	public Transaction(String owner, String receiver, int coins, String id, String signature) {
		super();
		this.owner = owner;
		this.receiver = receiver;
		this.coins = coins;
		this.id = id;
		this.signature = signature;
	}
	
	public boolean isSignatureValid() {
		return false;
	}
	
	@SuppressWarnings("unchecked")
	public String toJSON() {
		JSONObject json = new JSONObject();
		json.put("owner", owner);
		json.put("receiver", receiver);
		json.put("coins", coins);
		json.put("id", id);
		return json.toJSONString();
	}
	
	@SuppressWarnings("unchecked")
	public String toString() {
		JSONObject json = new JSONObject();
		json.put("owner", owner);
		json.put("receiver", receiver);
		json.put("coins", coins);
		json.put("id", id);
		json.put("signature", signature);
		return json.toJSONString();
	}
	
	public static Transaction fromJSON(String obj) throws ParseException {
		JSONObject jsonobj = (JSONObject) new JSONParser().parse(obj);
		return new Transaction(jsonobj.get("owner").toString(),
				jsonobj.get("receiver").toString(),
				Integer.parseInt(jsonobj.get("coins").toString()),
				jsonobj.get("id").toString(),
				jsonobj.get("signature").toString()
				);
	}
	
}
